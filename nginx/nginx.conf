events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;

    # Enable global access logging
    access_log /var/log/nginx/access.log combined;
    
    # Enable global error logging
    error_log /var/log/nginx/error.log warn;

    # Define a custom log format for API logging
    log_format api_log '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '"ResponseTime:$request_time"';

    server {
        listen 80;

        # Log all requests at the server level
        access_log /var/log/nginx/server_requests.log combined;

        location / {
            # Forward request to the Go web application
            proxy_pass http://web_app:8080;

            # Log API requests in a separate file
            access_log /var/log/nginx/api_requests.log api_log;
            error_log /var/log/nginx/api_errors.log warn;

            # Additional debug log for Lua operations
            log_by_lua_block {
                ngx.log(ngx.INFO, "Request received at: ", ngx.var.request_uri)
                ngx.log(ngx.INFO, "Request method: ", ngx.req.get_method())
            }

            # Check response headers after the request is forwarded
            header_filter_by_lua_block {
                local content_type = ngx.header["Content-Type"]
                if content_type and content_type == "application/json" then
                    local api_endpoint = ngx.var.request_uri

                    -- Log API response details
                    ngx.log(ngx.INFO, "API Response received for endpoint: ", api_endpoint)

                    -- Execute the script to update InfluxDB with the API endpoint
                    local cmd = "/usr/local/bin/update_influxdb.sh " .. api_endpoint
                    local res = os.execute(cmd)
                    if res == 0 then
                        ngx.log(ngx.INFO, "InfluxDB update success: ", api_endpoint)
                    else
                        ngx.log(ngx.ERR, "InfluxDB update failed for: ", api_endpoint)
                    end
                end
            }
        }
    }
}


